"hi everyonewe're back with five project ideas for full stack development I've done this video before but one veryspecific thing has happened in the pastsix months we now have an AI so you havea tutor to help you out and the way thatI've structured these assignments isthat I've written very nice prompts sothe things that you do not understandyou can ask chatGPT to build but I wouldprefer that you write them yourselfthese are five ideas that are slightlymore than full stacks these are actually clones of websitesbut these are not simple websites they don't have thebasic uh user signs up and doessomething they have some special Moatso I want you guys to build that moat-y thing that thing that has the moat and thereason is because that's whatdifferentiates a very good softwaredeveloper from an average full stackdeveloper so without further Ado let'sget right into the video the five ideasare right here I'm going to explain theidea a little bit show you the websitemaybe and then specifically tell you thedifficult bit to build here the bitthat's more than full stack developmentwhat is that protocol that it uses howyou can learn about it and how you canwrite that specific part of the codethat will be the most difficult biteverything else the basic structure orskeleton of the app will be the same forall five but the thing that's verydifficult will be different for each and everyone of thesethe first one is called a stream yard cloneso if you've seen this website called uh streamyard.com itbasically is a website that lets youstream from your browser to YouTube soif you go to YouTube and try to create anew liveyou can uh you get back something calledas an rtmp URL and using this rtmp URLyou can give it to stream yard and youcan stream directly from your browserand you can add more guests and friendsto this you can also put in overlayslike this so it's a pretty cool sort ofa website uh they were fairly big theywere a two people team that sort of Ithink reached like eight million dollarsin revenue and then finally got acquiredfor 250 million so pretty good businessduring covid and they had one very bigmoat the moat was it's very hard to dobrowser to rtmp and that's what they didso other than all the basic things thatyou need to do here the important thingis this backend service too the service that takes your input stream and thecurrent set of overlays so an overlaycould be a text somewhere your name atthe bottom or a comment that the userposted and it needs to be forwarded toYouTube server so the scope for thisproject is that you don't need it to bemultiplayered a single user needs tostream from the browser to YouTube sothe way this usually works is whenyou're in the browser you can you have acanvas where you can put your stream orpull it out if needed and you can putsome sort of a text overlay somewherehere let's saythis video stream then needs to go fromyour browser to a backend server andthis backend server needs to convertthis input stream for whatever format itmight beinto this format called rtmp which isthe format that YouTube understands thesame goes for twitch both YouTube twitchother streaming platforms they all giveyou an input rtmp URL and rtmp is hardto produce well impossible to producefrom the browser so you need a servicein the middle that converts this inputstream to an rtmp stream the questionnow is what is this input stream andwhat does it look like it can either bea websocket streamwhich means you convert all your video packets hereinto some sort of a video encoded datathen you send it to the backend serviceand the backend service converts thevideo data to rtmp this is not optimalthe optimal way of doing this is takinginput in webrtcso this is a UDP based protocol thatlet's you similarly capture and so you have tocapture the video similarly but you'regoing to be sending it not using websockets which is over TCPbut using web RTC how do you do that inthe browser you have very simpleconstructs that let you do it so on thisside is fairly easy to do if this isyour browserit's very easy for you to convert acanvas video into a webrtc output streamthe difficult bit is writing the serverside Logic for it which could be eithera node.js or usually it's in Golan whereyou're able to capture this input webrtcstream decode it using something likeFFMPeg or gstreamerand then send it to YouTube how do youdo that you figure it outI will be doing one of these projects at the veryend so you can let me know whichever wasthe most difficult one or that you wantme to build in the comments I will do itat the end and also time box it to one hourcool ?this is the first one stream yard andthis is the basic uhsystem design for it and the mostdifficult bit is this parteverything else is simple again you have prompt here solet the user sign upall the things that you need as afunctional requirement and the twoservices and what kind of cables youneed to create if you're using an sql databaseokay project number one is doneproject two is Google Docs I don't need to go too much into detail here Google Docs is a fairly simple application theonly thing that's difficult here andthere are two difficult things one is uhwhen you're writing something in GoogleDocs and if someone else has the samedoc open they need to see this data inreal time for that you can use somethingcalled Web sockets that let you send andreceive data in real time there needs tobe a server in the middle websockets isnot a peer-to-peer protocol so if thereis one browser here there's anotherbrowser here there needs to be a serverin the middle that relays thisinformation to all the users who aresubscribed to that specific Google docso if I put some text here it should goto a server from the server should berelayed to the people who have openedthat doc the other difficult bit hereis avoiding clashes what if I am writingsomething on some line the other personis writing something on the same line weare basically writing it not just at thesame line but at the same cursor point Iwrite hi here and someone writes hellohow does this Collision sort of finallyeventually reach the same state soeither reach hi hello or we each hellohior you sort of read some combination ofwhich like h h i e l l o but whateverthe case b they should eventually be thesame how do you solve this problemsolved using something calledoperational transforms which issomething you can read about that iswhat is the moat of this process and themost difficult bit thing to buildin Google Docs cool moving ona Google meet cloneso we've done stream yard and I told you guys that in stream yardthe way to send video from one server sorryfrom the browser to the server was thisprotocol called webrtc and this is alsothe protocol that's used in real timecommunication between browsers what isGoogle meet it's an application where Icome I see my video here and if someonejoins the same room I see their video aswell and people can screen share I hearthem as well so on and so forththis Media communication betweenbrowsers can be done by webrtc as I saidwebrtc is a construct that your browsersunderstand so it's actually fairly easyto do you do need a server in the middlethat's usually called the peering serverorthe signaling server yeahbut after the communication has beenestablished you can basically sendpackets between browsers as long asyou're in a decent Network and not in avery strict network if you are inrestricted Network you need to sendmedia through what's called a turnserver but you don't have to worry aboutit you'll just be testing it locallythis is also not the right architectureto do video applications you shouldn'tbe sending video peer-to-peer becausethis doesn't scale very well as 5 10 20people join your call but this is a goodstart this is where you should startwhat you need to do other than buildingthe basic blocks of the website you needto facilitate communication betweeneveryone who's in the same room let'ssay room oneand you need topush video from this guy to all theother people in the room and this guyshould also receive video from all thepeople who are in the room also screenshares and also audios cool given allthe Jazz here more things are in thereadme read through it and create asimple peer-to-peer Google meetmoving on to Fourth thingGoogle DriveGoogle Drive is simple right I think it's probably the simplest to implement herebecause we have very nice object storesright now like S3 and gcp also has oneI'm forgetting uh but you can basicallyjust Outsource storing the data which isthe most difficult bit here likecreating a file system that's sort ofreliable so you basically need a websitewhere users can upload a file let's saythere's a limit over here called 1GB andthis video slash audio slash whateverfile this is should reach S3 directlythat's the difficult thing to build heremost people when they build such asystem relay this information via aserver of their own to S3 and theproblem here is you don't want like a1GB file to reach your server and thengo to S3 when S3 provides you a way tosend it directly to S3 now to make itsecure you need to make sure you don'tput your right AWS credentials herebecause then your AWS credentials are onthe client side and you don't want themexposed there so there's somethingcalled pre-signing that's used here tobuild a system like this you get apre-signed URL from AWS through yourbackend serveruh so a request goes to your backendserver I need to upload something itcreates a pre-signed URL using the AWSkey that it has and you get back thepre-signed URL and you use thispre-signed URL to finally upload chunksone by one to S3 this is how I upload uhmy videos on my course selling websiteas well it's like a very famousarchitecture to upload videos to S3 sothat's a basic architecture of GoogleDrive then you just need to create shareable linkslastly leetCode I've basically created a full stack series onthis we've built everything here thefront-end and backend which are simple stuffthe difficult bit which someguy actually did and won a pair of airpods as wellwas running someone else's codein a containerized fashion on a server and it should Auto scale so this is leetcodesimple stuff is you allow user toput their code here and there's a submitbutton with this problem descriptionhere and test cases here okay when theuser clicks on submit is when the mostdifficult part of this business sort ofkicks in which is a request goessomewhere and it needs to run in a verycontainerized fashion neither a Dockercontainer or a nyx container orsomething else so that this end userwhatever code they have sent doesn'tblow up your instance if you have asingle instance that's running your mainbackend and maybe serving your mainfront end and here you run this usergiven code the problem is you can blowup the user's backend and front end andit's like a very famous vulnerability so how do you fix that you containarize the end user's submition you also needcontainerization because you need togive some certain level of sort oflimits as in 4GB RAM or like onesecond is the maximum time that you wantthe specific code to run and you havevery nice construct to sort of allowthat in Docker so if you want to I canalso link the final solution thatsomeone built but that was built usingkubernetes so some of you might notunderstand it there are easier ways todo Docker orchestration if this is thefirst time that you're doing this so youcan try that it's basically as simple astaking the input from the user maybeputting this in a queue and then havingworkers that can pick elements from thisqueue one by one and run the code in acontainerized fashion make sure itdoesn't run for more than one second ifit does return a tle or store a tle inthe database if it gives the rightoutput for every input test case thenput an AC in the database if it giveswrong output for any one input give a WAand put it in the database so fairly simple stuff most of itthose were five projects Linked In the description letme know which one you want me to buildand I will create a one and a half totwo hour video where I will try to time-boxand finish all the functionalities Ithink all of these are not too difficultto build and you can build them in twoto three hours I will personally try tobuild them in Max two hours which oneyou guys can comment below and let meknow but other than that I would urgeyou guys to do it yourself the repo islinked in the description if you haveany more questions let me know I'll seeyou guys in the next one bye byekirat creating terror"